gcc Julio20231160011.c corretor.c -o T1
gcc JulioBrito-20231160011-Q7.c -o Jogo

LISTA DE PRÓXIMAS ATIVIDADES
%Q1
Q2
%Q3
%Q4
%Q5
%Q6
EXTRA

% QUESTÃO 1: FEITO
% -> Criar função para validar datas
% -> Testar com a função
% (Fazer isso antes da questão 2)

QUESTÃO 2:
-> Criar função para validar datas
-> Testar com a função
(Fazer isso antes da questão 2)


% QUESTÃO 5: FEITO
REVISAR
  #include <stdio.h>
  #include <stdlib.h>
  
  int main(){
  
    int num = 91023;
    int quociente = 1;
    int soma = 0;
    int divisor = 1;
    int divisor2;
    int lista[100];
    int cont = 0;
    int contaux;
    int numaux;
  
    //parte 1: saber a grandeza do inteiro    
  
    while (quociente > 0){
      quociente = num / divisor;
      divisor *= 10;
      cont++;
    }
  
    cont = cont - 2;
    divisor /= 100;
    divisor2 = divisor;
    numaux = num;
    
    //parte 2: separar as casas
  
    for (contaux = cont; contaux >= 0; contaux--){
      lista[contaux] = numaux / divisor;
      numaux = numaux % divisor;
      divisor /= 10;
    }
    
    //parte 3: inverter as casas
    contaux = 0;
      
    while (cont >= contaux){
      soma = soma + (lista[contaux] * divisor2);
      divisor2 /= 10;
      contaux++;
    }
  
    num = soma;
  
    printf("%d", num);
  }

% QUESTÃO 6:

#include <stdio.h>

int main(){
  int numerobase = 34567368;
  int numerobusca = 3;
  int qtdOcorrencias = 0;

  int quociente = 1;
  int divisor = 1;
  int listabase[100];
  int cont = 0;
  int contaux;
  int numaux;

  //parte 1: separar as casas do numerobase   

  while (quociente > 0){
    quociente = numerobase / divisor;
    divisor *= 10;
    cont++;
  }

  cont = cont - 2;
  divisor /= 100;
  numaux = numerobase;

  listabase[cont+1] = -1;

  for (contaux = 0; contaux <= cont; contaux++){
    listabase[contaux] = numaux / divisor;
    numaux = numaux % divisor;
    divisor /= 10;
  }

  //parte 2: separar as casas do numerobusca

  quociente = 1;
  divisor = 1;
  int listabusca[100];
  cont = 0;

  while (quociente > 0){
    quociente = numerobusca / divisor;
    divisor *= 10;
    cont++;
  }

  cont = cont - 2;
  divisor /= 100;
  numaux = numerobusca;

  listabusca[cont+1] = -1;

  for (contaux = 0; contaux <= cont; contaux++){
    listabusca[contaux] = numaux / divisor;
    numaux = numaux % divisor;
    divisor /= 10;
  }

  //Parte 3: Contar as ocorrências

  int ibase = 0;
  int ibusca = 0;
  int incremento = 0;

  while(listabase[ibase] != -1){

    if(listabase[ibase] == listabusca[ibusca]){
      while(listabase[ibase + incremento] == listabusca[ibusca + incremento]){
        incremento++;
      }
      if (listabusca[ibusca + incremento] == -1)
        qtdOcorrencias++;
      incremento = 0;
    }
    ibase++;
  }

    printf("%d", qtdOcorrencias);
}